/**
 * @file Button.styles.css
 * @module UI/Button
 * @desc Custom styles for the MyBtn component. Defines both large (`.lg-btn`) and small (`.sm-btn`) button variants,
 *       including animated arrow behavior, interactive states, and design variables for hover/click feedback.
 *
 * @author Chace Nielson
 * @created May 9, 2025
 * @updated May 9, 2025
 *
 * @features
 * - Tailwind base import and custom `@theme` design tokens
 * - Animated arrow movement and box morph on hover
 * - Shine animation using `::before` pseudo-element
 * - Custom active state visual feedback
 * - Support for `sm` prop with scaled font, dimensions, and animation
 *
 * @dependencies
 * - Tailwind CSS
 * - Used in conjunction with `MyButton.jsx`
 *
 * @notes
 * - Uses CSS variables for scale and animation control.
 * - Button layout follows a utility-first design with extendable modifiers.
 */
@import "tailwindcss";

/* Therems for this buttons */
@theme {
  --color-abstract: --alpha(var(--color-primary-alt) / 60%);

  --background-color: --alpha(var(--color-secondary) / 70%);

  --load-animation-duration: 0.3s;
  --launch-animation-duration: 0.8s;

  --arrow-y-scale: 1.3;
  --arrow-x-scale: 0.6;

  --arrow-box-size: 2rem; /* size of the box */
  --arrow-box-expand-width: 4rem; /* size the box expands to */

  --arrow-wind-up: -1.3rem; /* how far the arrow moves to the left  */
}



.lg-btn {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  padding-top: 1rem;
  padding-bottom: 1rem;
  padding-left: 1.5rem;


  border-radius: 9999px; /* fully rounded */
  background-color: var(--background-color);
  color: var(--color-primary);

  cursor: pointer;
  transition: background 0.3s ease;
  border: 3px solid var(--color-abstract);
  gap: 1rem; /* space between label and arrow */
  overflow: hidden; 
  position: relative; /* Needed for the pseudo-element to position */
  overflow: hidden;   /* Ensures the shine stays inside the button */
  min-width: 12rem; /* min width */
  height: 3.75rem;


}

.lg-btn:active{
  background-color: var(--color-abstract);
  border: 3px solid var(--color-secondary);

  box-shadow: inset 0 0 0.5rem var(--color-secondary),
              inset 0 0 1rem var(--color-secondary),
              inset 0 0 1.5rem var(--color-secondary),
              inset 0 0 2rem var(--color-secondary);
}

/* The buttons label (children */
.lg-btn .label {
  display: inline-block; /* Ensures the label is treated as a block */
  white-space: nowrap;  /* Prevents text wrapping */
}

/* Set width on the container that is being animationed */
.lg-btn .arrow-box-container {
  width: 3rem;
}

.lg-btn .arrow-box {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: var(--color-abstract);
  color: var(--color-secondary);
  border-radius: 9999px; /* fully rounded */
  padding: 0.5rem;
  width: var(--arrow-box-size);
  height: var(--arrow-box-size);

  transition: transform 0.3s ease, width 0.3s ease; /* Add width to the transition */
}

/* The box around the arrow */
.lg-btn .arrow-box {
  transition: transform var(--load-animation-duration)  ease-in-out, width var(--load-animation-duration) ease-in-out;
  transform: translateX(0) scale(1, 1);
  width: var(--arrow-box-size);
  overflow: hidden;
}

  /* Hover state for  */
  .lg-btn:hover .arrow-box {
    transform:  scale(1, 1);
    width: var(--arrow-box-expand-width);
  }

/* The actual arrow in the box */
.lg-btn .arrow-icon {
  transition: transform var(--load-animation-duration) ease-in-out;
  transform: translateX(0rem) scale(1, 1);
}

  .lg-btn:hover .arrow-icon {
    transform: translateX(var(--arrow-wind-up)) scale(var(--arrow-x-scale), var(--arrow-y-scale));
  }


  /* when clicked this is applied */
.lg-btn-clicked .arrow-box-container .arrow-icon {
  animation: arrowLaunch var(--launch-animation-duration) ease-in-out forwards;
}


/* Arrow Icon on click movement */
@keyframes arrowLaunch {
  0% {
    transform: translateX(var(--arrow-wind-up)) scale(var(--arrow-x-scale), var(--arrow-y-scale));
    opacity: 1;
  }
  2% {
    transform: translateX(var(--arrow-wind-up)) scale(var(--arrow-x-scale), var(--arrow-y-scale));
  }
  40% {
    transform: translateX(3rem) scale(1, 1);
  }
  60% {
    transform: translateX(3rem) scale(1, 1);
    visibility: visible;
  }
  61% {
    transform: translateX(3rem) scale(1, 1);
    visibility: hidden;
  }
  80% {
    transform: translateX(-2rem) scale(1, 1);
    visibility: hidden;
  }
  90% {
    transform: translateX(0rem) scale(1, 1);
    visibility: visible;
  }
  100% {
    /* transform: translateX(0) scale(1,1); */
    transform: translateX(var(--arrow-wind-up)) scale(var(--arrow-x-scale), var(--arrow-y-scale));
    visibility: visible;
  }
}


/* Shine effect */
.lg-btn::before {
  content: "";
  position: absolute;
  top: -50%;
  left: -75%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    120deg,
    transparent 0%,
    rgba(255, 255, 255, 0.7) 70%,
    transparent 100%
  );
  filter: blur(3px);
  transform: skewX(-30deg) translateX(-100%);
  transition: none;
  pointer-events: none;
}

/* Animate shine on hover */
.lg-btn:hover::before {
  animation: shine 2s infinite;
}

@keyframes shine {
  0% {
    transform: skewX(-30deg) translateX(-100%);
  }
  70% {
    transform: skewX(-30deg) translateX(100%);
  }
  100% {
    transform: skewX(-30deg) translateX(100%);
  }
}



/* Small button overrides */
.sm-btn {
  height: 2.75rem;
}


.sm-btn .label {
  font-size: 1rem; /* or whatever size you want */
}


.sm-btn .arrow-box {
  --arrow-box-size: 1.75rem; /* size of the box */
}